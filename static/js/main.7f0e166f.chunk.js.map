{"version":3,"sources":["Suggest.module.css","arrow.svg","remove.svg","group.svg","game.svg","friend.svg","SuggestData.js","Suggest.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","input","inputFocused","inputOpen","suggestionsContainer","suggestionsContainerOpen","suggestionsList","suggestion","suggestionHighlighted","__webpack_require__","p","SuggestData","name","type","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","suggestData","filter","s","slice","getSuggestionValue","renderSuggestion","query","e","react_default","a","createElement","className","src","friend","alt","game","group","remove","arrow","shouldRenderSuggestions","Suggest","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","setState","onSuggestionsFetchRequested","_ref2","suggestions","onSuggestionsClearRequested","state","_this$state","inputProps","placeholder","dist_default","theme","alwaysRenderSuggestions","React","Component","App","src_Suggest","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,UAAA,2BAAAC,MAAA,uBAAAC,aAAA,8BAAAC,UAAA,2BAAAC,qBAAA,sCAAAC,yBAAA,0CAAAC,gBAAA,iCAAAC,WAAA,4BAAAC,sBAAA,4DCDlBV,EAAAC,QAAiBU,EAAAC,EAAuB,sDCAxCZ,EAAAC,QAAiBU,EAAAC,EAAuB,uDCAxCZ,EAAAC,QAAiBU,EAAAC,EAAuB,sDCAxCZ,EAAAC,QAAiBU,EAAAC,EAAuB,kICAxCZ,EAAAC,QAAiBU,EAAAC,EAAuB,kLCAzBC,EAAA,CACb,CACEC,KAAM,iCACNC,KAAM,WAER,CACED,KAAM,2BACNC,KAAM,WAER,CACED,KAAM,uCACNC,KAAM,WAER,CACED,KAAM,iCACNC,KAAM,WAER,CACED,KAAM,iCACNC,KAAM,WAER,CACED,KAAM,6CACNC,KAAM,WAER,CACED,KAAM,qBACNC,KAAM,WAGR,CACED,KAAM,kFACNC,KAAM,UAER,CACED,KAAM,mFACNC,KAAM,UAER,CACED,KAAM,oGACNC,KAAM,UAER,CACED,KAAM,sEACNC,KAAM,UAER,CACED,KAAM,oGACNC,KAAM,UAER,CACED,KAAM,wFACNC,KAAM,UAER,CACED,KAAM,wFACNC,KAAM,UAGR,CACED,KAAM,kFACNC,KAAM,QAER,CACED,KAAM,wFACNC,KAAM,QAGR,CACED,KAAM,uCACNC,KAAM,SAGR,CACED,KAAM,kFACNC,KAAM,QAER,CACED,KAAM,wFACNC,KAAM,QAGR,CACED,KAAM,iCACNC,KAAM,SAGR,CACED,KAAM,6CACNC,KAAM,QAGR,CACED,KAAM,mFACNC,KAAM,SAER,CACED,KAAM,uCACNC,KAAM,SAER,CACED,KAAM,uCACNC,KAAM,SAER,CACED,KAAM,kFACNC,KAAM,SAER,CACED,KAAM,qGACNC,KAAM,SAER,CACED,KAAM,kFACNC,KAAM,SAER,CACED,KAAM,mHACNC,KAAM,SAER,CACED,KAAM,uEACNC,KAAM,SAER,CACED,KAAM,yIACNC,KAAM,SAER,CACED,KAAM,oGACNC,KAAM,SAER,CACED,KAAM,6HACNC,K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","file":"static/js/main.7f0e166f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Suggest_container__3Bu89\",\"input\":\"Suggest_input__1liw2\",\"inputFocused\":\"Suggest_inputFocused__JrS1O\",\"inputOpen\":\"Suggest_inputOpen__3SLMX\",\"suggestionsContainer\":\"Suggest_suggestionsContainer__2E981\",\"suggestionsContainerOpen\":\"Suggest_suggestionsContainerOpen__6Z3mr\",\"suggestionsList\":\"Suggest_suggestionsList__1r9x9\",\"suggestion\":\"Suggest_suggestion__2aVii\",\"suggestionHighlighted\":\"Suggest_suggestionHighlighted__3MVO3\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.a5d6bc2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.d65ee882.svg\";","module.exports = __webpack_public_path__ + \"static/media/group.0866743a.svg\";","module.exports = __webpack_public_path__ + \"static/media/game.926a407d.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend.b5295dad.svg\";","export default [\n  {\n    name: 'вадим',\n    type: 'history'\n  },\n  {\n    name: 'дима',\n    type: 'history'\n  },\n  {\n    name: 'играть',\n    type: 'history'\n  },\n  {\n    name: 'порно',\n    type: 'history'\n  },\n  {\n    name: 'гонки',\n    type: 'history'\n  },\n  {\n    name: 'новости',\n    type: 'history'\n  },\n  {\n    name: 'ржу',\n    type: 'history'\n  },\n\n  {\n    name: 'Алексей Шевчук',\n    type: 'friend'\n  },\n  {\n    name: 'Шевчук Алексей ',\n    type: 'friend'\n  },\n  {\n    name: 'Владимир Кочетков',\n    type: 'friend'\n  },\n  {\n    name: 'Вадим Цесько',\n    type: 'friend'\n  },\n  {\n    name: 'Кочетков Владимир',\n    type: 'friend'\n  },\n  {\n    name: 'Дмитрий Щитинин',\n    type: 'friend'\n  },\n  {\n    name: 'Щитинин Дмитрий',\n    type: 'friend'\n  },\n\n  {\n    name: 'Алексей Иванов',\n    type: 'user'\n  },\n  {\n    name: 'Владимир Иванов',\n    type: 'user'\n  },\n\n  {\n    name: 'Иванов',\n    type: 'token'\n  },\n\n  {\n    name: 'Иванов Алексей',\n    type: 'user'\n  },\n  {\n    name: 'Иванов Владимир',\n    type: 'user'\n  },\n\n  {\n    name: 'Ржака',\n    type: 'group'\n  },\n\n  {\n    name: 'Рулетка',\n    type: 'game'\n  },\n\n  {\n    name: 'ржака до усраки',\n    type: 'token'\n  },\n  {\n    name: 'футбол',\n    type: 'token'\n  },\n  {\n    name: 'футбол',\n    type: 'token'\n  },\n  {\n    name: 'футбол новости',\n    type: 'token'\n  },\n  {\n    name: 'футбол прямой эфир',\n    type: 'token'\n  },\n  {\n    name: 'игра престолов',\n    type: 'token'\n  },\n  {\n    name: 'игра престолов 8 сезон',\n    type: 'token'\n  },\n  {\n    name: 'играть в игры',\n    type: 'token'\n  },\n  {\n    name: 'играть сокровища пиратов',\n    type: 'token'\n  },\n  {\n    name: 'сокровища пиратов',\n    type: 'token'\n  },\n  {\n    name: 'сокровища пиратов игра',\n    type: 'token'\n  },\n  {\n    name: 'сокровища пиратов играть',\n    type: 'token'\n  },\n  {\n    name: 'сокровища пиратов играть онлайн',\n    type: 'token'\n  }\n\n];\n","import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport suggestData from './SuggestData'\nimport theme from './Suggest.module.css';\nimport arrow from './arrow.svg'\nimport remove from './remove.svg'\nimport friend from './friend.svg'\nimport group from './group.svg'\nimport game from './game.svg'\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength == 0 ?\n      suggestData.filter(s =>\n          s.type === 'history'\n      ).slice(0, 8) :\n      suggestData.filter(s =>\n        s.name.toLowerCase().slice(0, inputLength) === inputValue\n      ).slice(0, 8);\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = (suggestion, query) => {\n  let s = suggestion.name;\n  let p = s.slice(0, query.query.length);\n  let e = s.slice(query.query.length);\n\n  return (\n      <div>\n        {suggestion.type === 'friend' ?\n        <span className=\"icon\">\n            <img src={friend} alt=\"friend\"/>\n        </span> : ''}\n\n        {suggestion.type === 'game' ?\n            <span className=\"icon\">\n            <img src={game} alt=\"game\"/>\n        </span> : ''}\n\n        {suggestion.type === 'group' ?\n            <span className=\"icon\">\n            <img src={group} alt=\"group\"/>\n        </span> : ''}\n\n        {p === '' ? '' : <b>{p}</b>}\n        {e}\n\n        <div className=\"arrow\">\n          {suggestion.type === 'history' ? <img src={remove} alt=\"remove\"/> : ''}\n          &nbsp;&nbsp;\n          <img src={arrow} alt=\"arrow\"/>\n        </div>\n      </div>\n  )\n};\n\nconst shouldRenderSuggestions = () => {\n  return true;\n};\n\nclass Suggest extends React.Component {\n  constructor() {\n    super();\n\n    // Autosuggest is a controlled component.\n    // This means that you need to provide an input value\n    // and an onChange handler that updates this value (see below).\n    // Suggestions also need to be provided to the Autosuggest,\n    // and they are initially empty because the Autosuggest is closed.\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    // this.setState({\n    //   suggestions: []\n    // });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: 'Поиск',\n      value,\n      onChange: this.onChange\n    };\n\n    // Finally, render it!\n    return (\n        <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            shouldRenderSuggestions={shouldRenderSuggestions}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            theme={theme}\n            alwaysRenderSuggestions={true}\n        />\n    );\n  }\n}\n\nexport default Suggest;","import React from 'react';\nimport './App.css';\nimport Suggest from './Suggest'\nimport friend from './friend.svg'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Suggest/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}